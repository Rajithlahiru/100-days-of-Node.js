* Node.js supports common.js by default.
* ES module (ECMA Script) was introduced in Node.js v8.5.0 and starting from Node.js v13.2.0 it became stable with ES modules.

* CommonJS --> `module.exports` and `require`

* To export something with a specified name in CommonJS,
	```javascript
		module.exports.custom_name = module_name;

		// To Access
		const module_name = require('./module')
		module_name.custom_name();
	```

* Authors can enable ES module system with the extension .mjs rather than using .js

* `export default` is used in ES6 to export a single module, funtion or a variable in the module.

* ES can be enabled in project by placing `"type": "module"` in package.json

* By default .cjs will be treated as ES modules and if the `"type": "module"` flag isn't set in package.json, the .js extension enebled modules will be considered as a CommonJS module.

* ES --> `export` and `import {} from ''`

* CommonJS usage is flexible sometimes.
ex:
```javascript
	if (true){
		const apple = require('./myModule');
```
* CommonJS are synchronous and ES are asynchronous.



